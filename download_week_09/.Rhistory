plot(hr,resids); abline(h=0,lty='dashed')
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,2))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hr,resids); abline(h=0,lty='dashed')
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,1))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hr,resids); abline(h=0,lty='dashed')
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,1))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(1,2))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,2))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,2))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
hist(resids)
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,2))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
hist(resids)
boxplot(resids)
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(3,2))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
hist(resids)
boxplot(resids)
qqline(resids)
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(3,2))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
hist(resids)
boxplot(resids)
qqnorm(resids)
qqline(resids)
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,3))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
hist(resids)
boxplot(resids)
qqnorm(resids)
qqline(resids)
par(mfrow=c(1,1))
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,3))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
hist(resids)
boxplot(resids)
qqnorm(resids)
qqline(resids)
par(mfrow=c(1,1))
shapiro.test(resids)
linear.model <- with( normtemp, lm( hr ~ temp ) )
linear.model.full <- with( normtemp, lm( hr ~ factor(temp) ) )
anova( linear.model, linear.model.full )
drug.model <- with( drug, lm( strength ~ dose ) )
drug.model.full <- with( drug, lm( strength ~ factor(dose) ) )
anova( drug.model, drug.model.full )
drug.model <- with( drug, lm( strength ~ dose ) )
drug.model.full <- with( drug, lm( strength ~ factor(dose) ) )
anova( drug.model, drug.model.full )
drug.model.full <- with( drug, lm( strength ~ factor(dose) ) )
with( drug, plot(dose, strength) )
abline( drug.model, col = 'blue', lwd = 2)
points( drug$dose, drug.model.full$fitted, type='b', col='darkgreen', lwd=2, pch=22 )
# this is just tricks to trim the output to fit on one slide
drug.model <- with( drug, lm( strength ~ dose ) )
require(utils)
tmp <- noquote(
capture.output(
summary(drug.model)
)
)
write.table(tmp[17],quote=F,row.names=F,col.names=F)
dose <- rep(c(2,4,8,16,32,64),c(3,2,2,3,2,3))
strength <- c(5,7,3,10,14,15,17,20,21,19,23,29,28,31,30)
drug <- data.frame(dose,strength); mod <- lm(strength~dose)
plot(dose,strength); abline(mod)
drug.model <- with( drug, lm( strength ~ dose ) )
summary(drug.model)
# this is just tricks to trim the output to fit on one slide
drug.model <- with( drug, lm( strength ~ dose ) )
require(utils)
tmp <- noquote(
capture.output(
summary(drug.model)
)
)
write.table(tmp[17],quote=F,row.names=F,col.names=F)
require(lmtest)
bptest(linear.model)
install.packages(lmtest)
require(lmtest)
bptest(linear.model)
install.packages("lmtest"")
require(lmtest)
bptest(linear.model)
install.packages("lmtest")
require(lmtest)
bptest(linear.model)
#install.packages("lmtest")
require(lmtest)
bptest(linear.model)
with(normtemp, cor.test( temp, hr)$estimate )
with(production, cor.test( NumItems, Time)$conf.int )
summary(linear.model)
rsq <- linear.model$r.squared
rsq.adj <- linear.model$adj.r.squared
# use for beamer
knitr::opts_chunk$set(fig.width=4, fig.height=3, fig.align='center',warning=FALSE, message=FALSE)
library(knitr)
library(car)
# use for word
# knitr::opts_chunk$set(fig.width=4, fig.height=3,warning=FALSE, message=FALSE)
# save par defaults
.pardefaults <- par()
# Ott 11.45
dose <- rep(c(2,4,8,16,32,64),c(3,2,2,3,2,3))
strength <- c(5,7,3,10,14,15,17,20,21,19,23,29,28,31,30)
drug <- data.frame(dose,strength)
# Ott 11.12
speed <- rep(c(60,80,100,120,140),each=4)
lifetime <- .1*c(46,38,49,45,47,58,55,54,50,45,32,48,41,45,40,38,36,30,35,34)
drills <- data.frame(speed,lifetime)
# example is from these lecture notes
# http://scc.stat.ucla.edu/page_attachments/0000/0139/reg_1.pdf
#
# data is from Simon Sheather book "A Modern Approach to Regression with R"
#production <- read.table("http://www.stat.tamu.edu/~sheather/book/docs#/datasets/production.txt", header=T, sep="")
production <- read.table('./production.txt',header=T,sep="")
production <- production[,c(3,2)]
names(production)<-c("NumItems","Time")
head(production)
with(production,plot(NumItems,Time))
with(production, cor.test( NumItems, Time)$estimate )
linear.model <- lm(Time~NumItems,data=production)
fits <- linear.model$fitted
par(mar=c(4,4,.25,.25))
with(production,plot(NumItems,Time))
abline(linear.model)
segments(x0=production$NumItems,y0=fits,x1=production$NumItems,y1=production$Time,lty="dotted")
# this is just tricks to trim the output to fit on one slide
linear.model <- with( production, lm( Time ~ NumItems ) )
require(utils)
tmp <- noquote(
capture.output(
summary(linear.model)
)
)
write.table(tmp[9:12],quote=F,row.names=F,col.names=F)
with( production, plot( NumItems, Time) )
abline( linear.model, col = 'blue' )
linear.model$coef[1]
linear.model$coef[2]
new <- data.frame( NumItems = seq(50,350,by=50) )
new
new$Time <- predict( linear.model, new )
new
par(mar=c(.25,.25,.25,.25),mfrow=c(1,1))
x <- c(2,7,7,8,11,13,15,33); y <- c(1,9,8,10,18,26,19,30)
plot( x, y, ylim=c(0,50) )
mod1 <- lm( y~x ); mod2 <- lm( y[-8] ~ x[-8] )
abline(mod1); abline(mod2,lty='dashed')
resids <- linear.model$resid # extract residuals from model
NumItems <- production$NumItems
Time <- production$Time
TimeFit <- linear.model$fitted.values
plot(NumItems,resids); abline(h=0,lty='dashed')
plot(TimeFit, resids); abline( h=0, lty='dashed')
n <- 10
par(mfrow=c(2,5))
par(mar=c(.25,.25,.25,.25))
for (i in 1:10){
x <- runif(n)
y <- rnorm(n)
plot(x,y,xaxt='n',yaxt='n',ylim=c(-2.5,2.5)); abline( h = 0, lty='dashed',xaxt='n',yaxt='n')
}
par(mfrow=c(1,1))
n <- 30
par(mfrow=c(2,5))
par(mar=c(.25,.25,.25,.25))
for (i in 1:10){
x <- runif(n)
y <- rnorm(n)
plot(x,y,xaxt='n',yaxt='n',ylim=c(-2.5,2.5)); abline( h = 0, lty='dashed',xaxt='n',yaxt='n')
}
par(mfrow=c(1,1))
n <- 100
par(mfrow=c(2,5))
par(mar=c(.25,.25,.25,.25))
for (i in 1:10){
x <- runif(n)
y <- rnorm(n)
plot(x,y,xaxt='n',yaxt='n',ylim=c(-2.5,2.5)); abline( h = 0, lty='dashed',xaxt='n',yaxt='n')
}
par(mfrow=c(1,1))
par(mfrow=c(2,2))
par(mar=c(.25,.25,.25,.25))
n <- 100
# fanning
x <- sort(10*runif(n))
y <- rnorm(n)*x
plot(x,y,xaxt='n',yaxt='n'); abline(h=0,lty='dashed')
# fanning other direction with curvature
x <- sort(10*runif(n))
y <- rnorm(n)*((10-x)/2.5)^2
plot(x,y,xaxt='n',yaxt='n'); abline(h=0,lty='dashed')
# fanning
x <- sort(10*runif(n))
y <- rnorm(n)*sqrt(x)
plot(x,y,xaxt='n',yaxt='n'); abline(h=0,lty='dashed')
# fanning
x <- sort(10*runif(n))
y <- rnorm(n)*(5-abs(5-x))
plot(x,y,xaxt='n',yaxt='n'); abline(h=0,lty='dashed')
n <- 10
par(mfrow=c(2,5))
par(mar=c(.25,.25,.25,.25))
for (i in 1:10){
x <- sort(runif(n))
y <- rnorm(n)*x
plot(x,y,xaxt='n',yaxt='n',ylim=c(-1.5,1.5)); abline( h = 0, lty='dashed',xaxt='n',yaxt='n')
}
par(mfrow=c(1,1))
n <- 30
par(mfrow=c(2,5))
par(mar=c(.25,.25,.25,.25))
for (i in 1:10){
x <- sort(runif(n))
y <- rnorm(n)*x
plot(x,y,xaxt='n',yaxt='n',ylim=c(-1.5,1.5)); abline( h = 0, lty='dashed',xaxt='n',yaxt='n')
}
par(mfrow=c(1,1))
n <- 100
par(mfrow=c(2,5))
par(mar=c(.25,.25,.25,.25))
for (i in 1:10){
x <- sort(runif(n))
y <- rnorm(n)*x
plot(x,y,xaxt='n',yaxt='n',ylim=c(-1.5,1.5)); abline( h = 0, lty='dashed',xaxt='n',yaxt='n')
}
par(mfrow=c(1,1))
require(lmtest) # install if needed
bptest(linear.model)
n <- 100
x <- 10*runif(100)
err <- rnorm(n)
err.sort <- sort(err)
for (i in 1:10){
ind <- ((i-1)*10 + 1):(i*10)
err.sort[ind]<-sample(err.sort[ind],replace=F)
}
y <- 2*x-1+err
y.sort <- 2*x-1+err.sort
res <- lm(y~x)$resid
res.sort <- lm(y.sort~x)$resid
par(mfrow=c(2,2))
par(mar=c(1.8,1.8,1.8,1.8)*1.3)
par(oma=c(1,1,0,0),
mgp=c(1.5,.75,0))
plot(x,y,xlab='explanatory',ylab='response',mar=c(1.8,1.8,0,1.8))
plot(1:n,y,xlab='observation number',ylab='response',mar=c(1.8,1.8,0,0))
plot(1:n,x,xlab='observation number',ylab='explanatory',mar=c(1.8,1.8,1.8,1.8))
plot(1:n,res,xlab='observation number',ylab='residual',mar=c(1.8,1.8,1.8,0))
par(mfrow=c(2,2))
par(mar=c(1.8,1.8,1.8,1.8)*1.3)
par(oma=c(1,1,0,0),
mgp=c(1.5,.75,0))
plot(x,y.sort,xlab='explanatory',ylab='response',mar=c(1.8,1.8,0,1.8))
plot(1:n,y.sort,xlab='observation number',ylab='response',mar=c(1.8,1.8,0,0))
plot(1:n,x,xlab='observation number',ylab='explanatory',mar=c(1.8,1.8,1.8,1.8))
plot(1:n,res.sort,xlab='observation number',ylab='residual',mar=c(1.8,1.8,1.8,0))
par(mar=c(4,4,.2,.25))
par(mfrow=c(1,2)); hist( resids); qqnorm( resids); qqline( resids)
confint(linear.model)
with(production, cor.test( NumItems, Time)$conf.int )
# this is just tricks to trim the output to fit on one slide
linear.model <- with( production, lm( Time ~ NumItems ) )
require(utils)
tmp <- noquote(
capture.output(
summary(linear.model)
)
)
write.table(tmp[9:12],quote=F,row.names=F,col.names=F)
summary(linear.model)
rsq <- linear.model$r.squared
rsq.adj <- linear.model$adj.r.squared
with(production, cor.test( NumItems, Time, method = "spearman"))
# plot the confidence and prediction bands
lines(xplot[,1], fittedC[, "lwr"], lty = "dashed", col='darkgreen',lwd=2)
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( NumItems = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(NumItems,Time,ylim=ylimits,xaxt='n',yaxt='n',xlab='')
axis(2,mgp=c(3,.5,0))
axis(1,mgp=c(3,.3,0))
mtext(side=1,text='NumItems',line=1.5)
#mtext(side=2,text='Time',line=1.5)
abline(linear.model)
# plot the confidence and prediction bands
lines(xplot[,1], fittedC[, "lwr"], lty = "dashed", col='darkgreen',lwd=2)
lines(xplot[,1], fittedC[, "upr"], lty = "dashed", col='darkgreen',lwd=2)
lines(xplot[,1], fittedP[, "lwr"], lty = "dotted", col='blue',lwd=2)
lines(xplot[,1], fittedP[, "upr"], lty = "dotted", col='blue',lwd=2)
lines(xplot[201,1]*c(1,1),fittedP[201,c(2,3)],col="red",lty="dotted",lwd=2)
with(production, cor.test( temp, hr)$conf.int )
with(production, cor.test( temp, hr, method = "spearman"))
```{r echo = FALSE,fig.width=5.3,fig.height=2.9}
```{r echo = FALSE,fig.width=5.3,fig.height=2.9}
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( NumItems = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(NumItems,Time,ylim=ylimits,xaxt='n',yaxt='n',xlab='')
axis(2,mgp=c(3,.5,0))
axis(1,mgp=c(3,.3,0))
mtext(side=1,text='NumItems',line=1.5)
#mtext(side=2,text='Time',line=1.5)
abline(linear.model)
# plot the confidence and prediction bands
lines(xplot[,1], fittedC[, "lwr"], lty = "dashed", col='darkgreen',lwd=2)
lines(xplot[,1], fittedC[, "upr"], lty = "dashed", col='darkgreen',lwd=2)
lines(xplot[,1], fittedP[, "lwr"], lty = "dotted", col='blue',lwd=2)
lines(xplot[,1], fittedP[, "upr"], lty = "dotted", col='blue',lwd=2)
lines(xplot[201,1]*c(1,1),fittedP[201,c(2,3)],col="red",lty="dotted",lwd=2)
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( NumItems = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(temp,hr,ylim=ylimits,xaxt='n',yaxt='n',xlab='')
axis(2,mgp=c(3,.5,0))
axis(1,mgp=c(3,.3,0))
mtext(side=1,text='temp',line=1.5)
#mtext(side=2,text='Time',line=1.5)
abline(linear.model)
# plot the confidence and prediction bands
lines(xplot[,1], fittedC[, "lwr"], lty = "dashed", col='darkgreen',lwd=2)
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
require(DS705data)
data(normtemp)
normtemp <- normtemp[c(-129,-130),]
#normtemp
with(normtemp,plot(temp,hr))
with(normtemp, cor.test( temp, hr)$estimate )
linear.model <- with( normtemp, lm( hr ~ temp ) )
summary(linear.model)
#summary(linear.model)
with(normtemp, cor.test( temp, hr) )
confint(linear.model)
x <- data.frame( temp = 98.6 )
predict( linear.model, x , interval="confidence")
x <- data.frame( temp = 98.6 )
predict( linear.model, x , interval="prediction")
resids <- linear.model$resid # extract residuals from model
temp <- normtemp$temp
hr <- normtemp$hr
hrFit <- linear.model$fitted.values
par(mfrow=c(2,3))
plot(temp,resids); abline(h=0,lty='dashed')
plot(hrFit,resids); abline(h=0,lty='dashed')
hist(resids)
boxplot(resids)
qqnorm(resids)
qqline(resids)
par(mfrow=c(1,1))
shapiro.test(resids)
linear.model <- with( normtemp, lm( hr ~ temp ) )
linear.model.full <- with( normtemp, lm( hr ~ factor(temp) ) )
anova( linear.model, linear.model.full )
#install.packages("lmtest")
require(lmtest)
bptest(linear.model)
with(normtemp, cor.test( temp, hr)$estimate )
with(production, cor.test( temp, hr)$conf.int )
summary(linear.model)
rsq <- linear.model$r.squared
rsq.adj <- linear.model$adj.r.squared
with(production, cor.test( temp, hr, method = "spearman"))
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(temp,hr,ylim=ylimits,xaxt='n',yaxt='n',xlab='')
axis(2,mgp=c(3,.5,0))
axis(1,mgp=c(3,.3,0))
mtext(side=1,text='temp',line=1.5)
#mtext(side=2,text='Time',line=1.5)
abline(linear.model)
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(temp,hr,ylim=ylimits,xaxt='n',yaxt='n',xlab='')
#mtext(side=2,text='Time',line=1.5)
abline(linear.model)
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(temp,hr,ylim=ylimits,xaxt='n',yaxt='n',xlab='')
abline(linear.model)
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(temp,hr)
abline(linear.model)
par(mar=c(2.5,4,.15,.15))
xplot <- data.frame( temp = seq( 50, 350, length=301) )
fittedC <- predict(linear.model,xplot,interval="confidence")
fittedP <- predict(linear.model,xplot,interval="prediction")
# scatterplot
ylimits <- c(min(fittedP[,"lwr"]),max(fittedP[,"upr"]))
par(las=1)
plot(temp,hr)
abline(linear.model)
# plot the confidence and prediction bands
lines(xplot[,1], fittedC[, "lwr"], lty = "dashed", col='darkgreen',lwd=2)
lines(xplot[,1], fittedC[, "upr"], lty = "dashed", col='darkgreen',lwd=2)
lines(xplot[,1], fittedP[, "lwr"], lty = "dotted", col='blue',lwd=2)
lines(xplot[,1], fittedP[, "upr"], lty = "dotted", col='blue',lwd=2)
lines(xplot[201,1]*c(1,1),fittedP[201,c(2,3)],col="red",lty="dotted",lwd=2)
